% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Postprocess.R
\name{filter_sources}
\alias{filter_sources}
\title{filter_sources}
\usage{
filter_sources(in.file = "source_scen_prods.csv",
  out.file = "source_scen_subset.csv", ids = c("ALL"),
  types = c("ALL"))
}
\arguments{
\item{In.file}{a csv file that contains expsoure info default = "source_scen_prods.csv"}

\item{Out.file}{default = "source_scen_prods.csv"}

\item{IDS}{default = "ALL"}

\item{Types}{default = "ALL"}
}
\value{
A .csv file of the same type as in.file, with the same variables and data, but fewer rows. The selected rows
have source.type matching one of the elements in the "types" argument, and also have source.id matching one of the
elements of the "ids" argument.  If either argument is missing, then all sources automatically match it.  Filter_sources
also returns an R object containing the same data as the output .csv file.
}
\description{
This function is used to select a subset of sources from another "source" file.
}
\details{
This function is used to select a subset of sources from another "source" file.  This is achieved by specifying 
either a list of the desired source ids, or one or more sources types.  The allowed types are "A" for articles, "F" for
foods, or "P" for products.  Use the c() function to list more than one item (e.g. types=c("F","P") for foods and products).
Any of the three types of source files (that is, source_scen, source_chem, or source_vars) may be used.
Specifying specific sources is achieved using the "ids" argument.  This may require examining the in.file beforehand,
to obtain the correct source.id values for the desired sources.
}
